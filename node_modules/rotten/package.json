{
  "author": {
    "name": "David Trejo",
    "email": "david.daniel.trejo@gmail.com",
    "url": "http://dtrejo.com/"
  },
  "name": "rotten",
  "description": "figure out which branches in your git repository are rotten and haven't been merged into production in WAY too long.",
  "version": "1.3.0",
  "homepage": "https://github.com/dtrejo/rotten",
  "repository": {
    "url": "git@github.com:DTrejo/rotten.git"
  },
  "main": "rotten.js",
  "dependencies": {
    "colors": "~0.6.0-1",
    "async": "~0.1.22",
    "optimist": "~0.3.4"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "preferGlobal": true,
  "bin": {
    "rotten": "./rotten.js"
  },
  "readme": "# Rotten â€” find empty git branches and unmerged ones with tons of code!\n\n    $ npm -g install rotten\n\n## It helps you discover\n- Which remote branches are empty (all code is in master), also outputs a command to delete them all.\n- Which remote branches still have lots of code that needs to be merged\n- How long remote branches have been waiting to be merged.\n\n## Why is this useful?\n- discover which projects are languishing\n- discover which engineers are unhappy that their code is not being reviewed/merged\n- discover how effective your development process is\n\n## How rotten am I really?\nTry it out.\n\n```sh\n$ npm -g install rotten\n$ cd my-big-git-repo\n$ rotten\n```\n\n# Usage\n\n```\nUsage: rotten --repo /path-to-git-repo --prod master\n\nOptions:\n  -r, --repo         the repo youd like to examine for rotting code                                        [default: \".\"]\n  -p, --prod         the branch you have running in production                                             [default: \"master\"]\n  --keep             don't run \"harvested\" checks (if you want to keep merged branches)                    [default: false]\n  -c, --mostcommits  show branches with the most commits first (defaults to showing oldest commits first)  [default: false]\n```\n\nIf you'd like to order by most commits waiting (instead of oldest commit waiting):\n\n```sh\n$ rotten --mostcommits\n```\n\n\n## Scoring?\n`Your rotten score is #rotten:13/harvested:37`\n\nExplanation:\n\n- rotten: number of branches you need to merge into prod\n- harvested: branches already in prod that need to be deleted.\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/DTrejo/rotten/issues"
  },
  "_id": "rotten@1.3.0",
  "dist": {
    "shasum": "1d176efe1dd35d1cb86c382b5b44c2da2c72c52a"
  },
  "_from": "rotten@",
  "_resolved": "https://registry.npmjs.org/rotten/-/rotten-1.3.0.tgz"
}
