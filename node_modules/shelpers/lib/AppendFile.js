var sh = require('shelpers').shelpers;
var shelpers = require('shelpers');

/**
 * Open file,
 * see if contains contents
 * if does not, add content to it
 *
 * @constructor
 */
function AppendFile() {
    var p = AppendFile.prototype;
    p = this;
    var self = this;
    p.init = function init(file, append, toLine, fromFile) {
        self.proc('append file with', file, append, toLine)
        var contents = sh.readFile(file, '');
        if ( fromFile != null ) {
            append = sh.readFile(fromFile);
        }
        var skip = false
        if ( contents.indexOf(append) == -1 ) {
            if ( toLine == null || toLine == '' ) {
                contents += sh.n + append ;
            }
            else {
                var lines = sh.getLinesFromFile(file, false);
                newArray = lines.slice(0,toLine)
                newArray.push(append)
                newArray = newArray.concat(lines.slice(toLine))
                contents = newArray.join("\n");
            }


        } else {
            self.proc('file already had contents')
            skip = true
        }

        if ( skip == false ) {
            console.log('writing file')
            sh.writeFile(file, contents);
        }

        self.file = file;

    };

    p.showFile = function showFile( msg, checkFor) {
        self.proc('show log', msg)
        var contents = sh.readFile(self.file);

        if ( checkFor != null &&  contents.indexOf(checkFor) == -1 ) {
            throw new Error(['validation failed ', msg,
                checkFor, false].join(' '))
        }

        console.log(contents)
    };

    p.proc = function debugLogger() {
        if ( self.silent == true) {
            return;
        }
        sh.sLog(arguments);
    };
}

exports.AppendFile = AppendFile;

var args = sh.getNodeArguments();
if (module.parent == null &&  args.length == 0 ) {

    var dir = 'tests/append/'
    var file1 = dir + 'test1.txt'
    var file2 = dir + 'test2.txt'
    var fileAppend = dir + 'appendFile.txt'
    var  fileAppendContents= sh.readFile(fileAppend)
    var fileBlank = dir + 'blank.txt';
    sh.writeFile(fileBlank, '');


    function resetFiles() {
        sh.mkdirp(dir);
        sh.writeFile(file1, 'some thing\n, \n\r asdf \n what is this?')
        sh.writeFile(file2, 'some thing\n, \n\r asdf \n what is this?')
    }

    resetFiles()
    var instance = new AppendFile();
    instance.init(file1, 'hhhhh')
    instance.showFile();
    instance.init(file1, 'hhhhh')
    instance.showFile('add again to see if 2 hhhhh');

    resetFiles()
    var instance = new AppendFile();
    instance.init(file2, 'hhhhh',1)
    instance.showFile('is after first line?');
    instance.init(file2, 'hhhhh',1)
    instance.showFile('add again to see if 2 hhhhh');

    resetFiles()
    var instance = new AppendFile();
    instance.init(file2, 'hhhhh',1, fileAppend)
    instance.showFile('is after first line?', fileAppendContents);
    instance.init(file2, 'hhhhh',0, fileAppend)
    instance.showFile('add again to see if 2 have contents', fileAppendContents);

    resetFiles()
    var instance = new AppendFile();
    instance.init(file2, 'hhhhh',0, fileAppend)
    instance.showFile('add again to see if 2 have contents', fileAppendContents);

    resetFiles('append to blank file')
    var instance = new AppendFile();
    instance.init(fileBlank, 'hhhhh',0, fileAppend);
    instance.showFile('add again to see if 2 have contents', fileAppendContents);

    sh.deleteFile(fileBlank)
    resetFiles('delete file, and see if it recreates file from scratch')
    var instance = new AppendFile();
    instance.init(fileBlank, 'hhhhh',0, fileAppend);
    instance.showFile('add again to see if 2 have contents', fileAppendContents);


    sh.deleteFile(fileBlank)
    resetFiles('", with invalid line number')
    var instance = new AppendFile();
    instance.init(fileBlank, 'hhhhh',60, fileAppend);
    instance.showFile('add again to see if 2 have contents', fileAppendContents);

} else {
    //var args = sh.getNodeArguments();
    var instance = new AppendFile();
    instance.init(args[0], args[1], args[2], args[3] );
}



