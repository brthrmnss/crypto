/**
 * Created by smorris1 on 1/3/14.
 * Encapsulates all loigc for remote server
 */
var sh = require('shelpers').shelpers;
var Server = require('./BolideServer').BolideServer;
var Client = require('./BolideUIClient').BolideUIClient;

var type = {}
type.tasks  = {}
type.tasks.fiveSecTask = 'fiveSecTask'

var PromiseHelper = require('shelpers').PromiseHelper;
var OptionsHelper = require('shelpers').OptionsHelper
var SettingsHelper = require('shelpers').SettingsHelper




function DelayInputCommand() {
    var p = DelayInputCommand.prototype;
    var p = this;
    var self = this;

    self.name = 'DelayInputCommand'
    self.settings = {}

    p.loadConfig = function loadConfig(options) {

        var CommandRunner = sh.CommandRunner
        var cR  = new CommandRunner();
        var settings ={}
        settings.cmd = options.cmd

        var args =   sh.splitStrIntoArray(options.args);
        //first parameter is path to input file
        //mixin arguments
        //self.properties

        var fxCallbackTestComplete = function fxCallbackTestComplete() {
            console.log('done')

        }

        settings.fxCallback = fxCallbackTestComplete;

        settings.fxEcho = function fxEcho(x){

            console.log('echoing....',x)
           // self.addUpdateDown('echo ' + x )
        } //= self.incomingMessage

        cR.execute(settings)


        var wait = 3000
        setTimeout( function ag(){
            sh.each(args, function argX(i, arg){
                setTimeout(function callC(){
                    cR.write(arg)
                }, i*wait);


            })
        },3*1000)

        //

    }



    p.proc = function debugLogger() {
        if ( self.silent == true) {
            return
        }
        sh.sLog(arguments)
    }
}

exports.DelayInputCommand = DelayInputCommand



if (module.parent == null) {


    function sdf() {
        var d = new DelayInputCommand()
        var options = {}
        options.cmd = 'cmd'
        options.args = 'dir, date'
        //options.arg2 = 'fff'
        d.loadConfig(options)
    }
    sdf();
}
