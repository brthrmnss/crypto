
function BolideLiteUIClient () {

    var self = this;
    var p = BolideLiteUIClient.prototype;
    p = this;

    self.data = {}

    p.loadConfig = function loadConfig(settings) {
        var defaultSettings = {}
        //send updates
        defaultSettings.fxUpdate = null ;
        defaultSettings.taskName;
        //send updates
        defaultSettings.fxUpdate = null ;
        self.settings = settings;
        self.data.prePendUrl = ''
        if ( self.settings.port != null )
            var port = ':'+self.settings.port
        self.data.prePrepend = 'http://'+ 'localhost'+port +
            '/' + self.settings.taskName + '/'
    }

    p.start = function start (input) {

        var data = {}
        data.input = input
        console.log('starting task',  self.data.prePrepend + 'run')
        $.ajax({
            type: "POST",
            url:  self.data.prePrepend + 'run',
            data: data,
            success: onPushModelConfirmed,
            dataType: 'json'
        });
        function onPushModelConfirmed(  body) {
            var model_ = body
            //
        }
    }
    p.getUpdates = function getUpdates(msg) {
        var url =  self.data.prePrepend + 'get'
        $.ajax({
            type: "GET",
            url: url,
            data: {},
            success: onPushModelConfirmed,
            dataType: 'json'
        });
        function onPushModelConfirmed(  body) {
            var model_ = body//JSON.parse(body);
            self.handleUpdates(body)
        }
    }

    p.sendMethod = function sendMethod(msg) {
        var url =  self.data.prePrepend + 'get'
        var data = {}
        $.ajax({
            type: "POST",
            url: url,
            data: data,
            success: onPushModelConfirmed,
            dataType: 'json'
        });
        function onPushModelConfirmed(  body) {
            var model_ = body;
            self.handleUpdates(body)
        }
    }

    p.sendMessage = function sendMethod(method, args) {
        var url =  self.data.prePrepend + 'method'
        var data = {}
        data.method = method;
        data.args = args;
        $.ajax({
            type: "POST",
            url: url,
            data: data,
            success: onPushModelConfirmed,
            dataType: 'json'
        });
        function onPushModelConfirmed(  body) {
            var model_ = body//JSON.parse(body);
            self.handleUpdates(body)
        }
    }


    p.ping = function ping(msg) {
        var url =  self.data.prePrepend + 'info'
        var data = {}
        $.ajax({
            type: "POST",
            url: url,
            data: data,
            success: onPushModelConfirmed,
            dataType: 'json'
        });
        function onPushModelConfirmed(  body) {
            var model_ = body;
            self.handleUpdates(body);
        }
    }

    p.handleUpdates  = function handleUpdate(arr) {
        console.error('s', arr)
        $.each(arr, function procUpdate(i,update){
            console.error(i,update)
            self.settings.fxUpdate(update);
        })
    }




}



