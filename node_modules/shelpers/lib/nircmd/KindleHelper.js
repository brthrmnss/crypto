/**
 * Created by user1 on 4/27/14.
 * Collection of helpers to display warnings to user in windows systems
 */
var sh = require('shelpers').shelpers;
var shelpers = require('shelpers');
var EasyRemoteTester = shelpers.EasyRemoteTester;
var PromiseHelper = require('shelpers').PromiseHelper;
var NirCmdHelper = require('./NirCmdHelper').NirCmdHelper;

function KindleHelper(options) {
    var p = KindleHelper.prototype
    var self = this;
    p= self;

    var appName = 'Calculator'
    appName = 'Kindle'

    p.init = function sendKeys2( string ) {
        var p = new NirCmdHelper();
        self.n = p;

        var t = EasyRemoteTester.create('Test connection basics',{});
        var data = {};
        self.t = t;

        //t.add(self.kindleTest);
        //t.add(self.bringKindleToFront);
        //return;
        // t.add(self.cursorOnTop);
        t.add(self.highlight)
        t.add(self.highlight2)
        return;
        t.add(self.dragToBottom);
        t.add(self.copy);
        t.add(self.paste);
        t.add(self.showClipboard);
        t.add(self.nextPage);

        t.add(self.minimizeKindle);

    }

    self.kindleTest = function kindleTest() {
        self.n.runNircmd('win flash ititle '+appName+' 2 500',
            self.t.cb);
    }

    self.bringKindleToFront = function () {
        self.defineGroup(
            ['win show ititle '+appName+'',
                'win max ititle '+appName+'',
                'win settopmost ititle '+appName+''],
            self.t.cb);
    }

    self.cursorOnTop = function () {
        self.defineGroup(
            [
                'win focus ititle '+appName+'',
                'setcursor 340 120',
                // 'sendmouse move 340 120',
                'sendmouse left down',
                //'sendmouse move 1580, 980',
                'sendmouse move 500 -500',
                'movecursor 500 -500',
                'wait 2000',
                'sendmouse left up',
                'sendmouse right click',
                //'sendmouse left move 340, 120',
                // 'win settopmost ititle '+appName+''
            ],
            self.t.cb);
    }


    self.highlight = function highlight() {
        self.defineGroup(
            [
                'script kscript_highlight.txt',
                'sendmouse move -800 0',
                'wait 200',
                'clipboard clear',
                'sendkeypress ctrl+c',
                'sendkeypress esc',
               /* 'sendkey ctrl down',
                'sendkey c down',
                'sendkey c up',
                'sendkey ctrl up',*/
                //  'script kscript_copy.txt',
                // 'beep 5 5',
                'clipboard writefile txt.txt',
                'clipboard clear',
                'script kscript_highlight.txt',
                'wait 200',
                'sendkeypress ctrl+c',
                'sendkeypress esc',
                //'sendkeypress ctrl+c ctrl+c',
                //  'script kscript_copy.txt',
                'wait 200',
                'clipboard writefile txt2.txt',
                'sendkey rightalt down',
                'wait 200',
                'sendkey tab press',
                'wait 200',
                'sendkey rightalt up',
                'win focus ititle "Console2"',
                'win show ititle "Console2"'

            ],
            self.t.cb);
    }

    self.highlight2 = function highlight2() {
        var file = sh.readFile('txt.txt');
        var file2 = sh.readFile('txt2.txt')

        console.log('files', file.length, file2.length, file.length-file2.length)
        //console.log(file, sh.n, file2)
    }
    self.defineGroup  = function defineGroup(lines, fx)  {
        var newLines= [];
        var t2 = EasyRemoteTester.create('Test connection basics',{});
        var data = {};
        /*sh.each(lines, function addChain(i, line) {
         newLines.push('node '+line);
         })*/
        var txt = Math.random()+'.txt'
        sh.writeFile(txt, lines.join("\n"));
        self.n.runNircmd(
            'nircmd script ' +txt,
            function () {
                //sh.rmrf(txt);
                fx()
            }  );


    }
    self.defineGroup2  = function defineGroup(lines, fx)  {
        var t2 = EasyRemoteTester.create('Test connection basics',{});
        var data = {};
        sh.each(lines, function addChain(i, line) {
            t2.addNext(function newChain(){
                self.n.runNircmd(
                    line,
                    t2.cb);
            }, i)
        })
        t2.settings.fxDone = fx;
    }

    p.proc = function proc(options ){
        console.log(this.options)
    }

}

exports.KindleHelper = KindleHelper;

if (module.parent == null) {
    var p = new KindleHelper();
    p.init();
}
